#pragma kernel GeneratePoints

struct UnityRaycastHit {
    float3 p;
    float3 normal;
    float distance;
    uint colliderInstanceID;
    float4 color;
};

struct PointData {
    float3 position;
    float startTime;
     float4 color;
};

StructuredBuffer<UnityRaycastHit> _RaycastHitsBuffer;
AppendStructuredBuffer<PointData> _ProcessedPointsBuffer;

float _PropagationSpeed;
float _Time;
uint _RayCount;

[numthreads(64,1,1)]
void GeneratePoints (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _RayCount)
    {
        return;
    }

    UnityRaycastHit hit = _RaycastHitsBuffer[id.x];

    if (hit.colliderInstanceID > 0)
    {
        PointData p;
        p.position = hit.p;
        p.startTime = _Time + (hit.distance / _PropagationSpeed);
        p.color = hit.color;
        _ProcessedPointsBuffer.Append(p);
    }
}