#pragma kernel GeneratePoints

struct UnityRaycastHit {
    float3 p;
    float3 normal;
    float distance;
    uint colliderInstanceID;
};

struct PointData {
    float3 position;
    float3 normal;
    float startTime;
};

// --- MODIFIED: Back to an Append Buffer ---
StructuredBuffer<UnityRaycastHit> _RaycastHitsBuffer;
AppendStructuredBuffer<PointData> _ProcessedPointsBuffer; // This is the output

// Uniforms
float _PropagationSpeed;
float _Time;
int _RayCount;

[numthreads(64,1,1)]
void GeneratePoints (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _RayCount)
    {
        return;
    }

    UnityRaycastHit hit = _RaycastHitsBuffer[id.x];

    // --- MODIFIED: Back to the simpler logic ---
    // Only append points that actually hit a collider.
    if (hit.colliderInstanceID > 0)
    {
        PointData p;
        p.position = hit.p;
        p.normal = hit.normal;
        p.startTime = _Time + (hit.distance / _PropagationSpeed);
        _ProcessedPointsBuffer.Append(p);
    }
}